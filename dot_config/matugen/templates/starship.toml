##
# starship.toml config
##

# Get editor completions based on the config schema - if the lsp supports it
"$schema" = 'https://starship.rs/config-schema.json'

# key format for the line
format = """$cmd_duration\
$jobs\
$memory_usage\
$python\
[\\[](outline)\
$username\
[@](outline)\
$hostname\
[:](outline)\
$directory\
$git_branch\
$git_status\
$git_state\
[\\]](outline)\
$character"""

# don't add a blank link to the prompt
add_newline = false
# continuation just like bash
continuation_prompt = ">  "

# Use the Material You color palette
palette = 'matugen'

##
# Core prompt display - things you have to look at all the time
##
[username]
format = "[$user]($style)"
show_always = true
style_user = 'primary'

[hostname]
format = "[$hostname]($style)"
ssh_only = false
style = 'primary'

[directory]
format = "[$path]($style)[$read_only]($read_only_style)"
truncate_to_repo = true
#truncation_symbol = ".../"
style = 'primary'
read_only = " ó°Œ¾"
read_only_style = "error"

[character]
success_symbol = "[\\$](outline)"
error_symbol = "[\\$](bold error)"

##
# Context-sensitive stuff - stuff that only pops up when you need it
##
[python]
format = """[\\[](outline)\
[(${version})(|$virtualenv)]($style)\
[\\]](outline)"""
version_format = "$major.$minor"
style = "secondary"

[jobs]
format = """[\\[](outline)\
[$symbol$number]($style)\
[\\]](outline)"""
symbol = ""
style = 'primary'

[cmd_duration]
disabled = true
format = """[\\[](outline)\
[$duration]($style)\
[\\]](outline)"""
style = 'error'
min_time = 30_000 # show anything longer than 30s
#show_notifications = true 
#min_time_to_notify = 60_000 # gui notification for anything longer than 60s

[git_branch]
format = """ [\\(](outline)\
[$symbol$branch(:$remote_branch)]($style)\
"""
symbol = ''
style = 'secondary'

[git_status]
format = """([\\[$all_status$ahead_behind\\]]($style))\
[\\)](outline)"""

[git_state]
format = '\([$state( $progress_current/$progress_total)]($style)\) '

[memory_usage]
format = """[$symbol${ram_pct}]($style)"""
symbol = ''
style = 'bold error'
disabled = false
threshold = 80

##
# Color palette
##
[palettes.matugen]
# Primary colors
primary = '{{colors.primary.dark.hex}}'
on_primary = '{{colors.on_primary.dark.hex}}'
primary_container = '{{colors.primary_container.dark.hex}}'
on_primary_container = '{{colors.on_primary_container.dark.hex}}'
inverse_primary = '{{colors.inverse_primary.dark.hex}}'

# Secondary colors
secondary = '{{colors.secondary.dark.hex}}'
on_secondary = '{{colors.on_secondary.dark.hex}}'
secondary_container = '{{colors.secondary_container.dark.hex}}'
on_secondary_container = '{{colors.on_secondary_container.dark.hex}}'

# Tertiary colors
tertiary = '{{colors.tertiary.dark.hex}}'
on_tertiary = '{{colors.on_tertiary.dark.hex}}'
tertiary_container = '{{colors.tertiary_container.dark.hex}}'
on_tertiary_container = '{{colors.on_tertiary_container.dark.hex}}'

# Error colors
error = '{{colors.error.dark.hex}}'
on_error = '{{colors.on_error.dark.hex}}'
error_container = '{{colors.error_container.dark.hex}}'
on_error_container = '{{colors.on_error_container.dark.hex}}'

# Surface colors
surface = '{{colors.surface.dark.hex}}'
on_surface = '{{colors.on_surface.dark.hex}}'
surface_variant = '{{colors.surface_variant.dark.hex}}'
on_surface_variant = '{{colors.on_surface_variant.dark.hex}}'
surface_dim = '{{colors.surface_dim.dark.hex}}'
surface_bright = '{{colors.surface_bright.dark.hex}}'
surface_container = '{{colors.surface_container.dark.hex}}'
surface_container_high = '{{colors.surface_container_high.dark.hex}}'
surface_container_highest = '{{colors.surface_container_highest.dark.hex}}'

# Inverse colors
inverse_surface = '{{colors.inverse_surface.dark.hex}}'
inverse_on_surface = '{{colors.inverse_on_surface.dark.hex}}'

# Outline colors
outline = '{{colors.outline.dark.hex}}'
outline_variant = '{{colors.outline_variant.dark.hex}}'

# Special colors
scrim = '{{colors.scrim.dark.hex}}'
shadow = '{{colors.shadow.dark.hex}}'
